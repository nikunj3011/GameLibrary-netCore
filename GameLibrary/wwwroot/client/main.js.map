{"version":3,"sources":["./src/environments/environment.ts","./src/app/views/gameListView.component.html","./src/app/views/gameListView.component.ts","./src/app/services/store.services.ts","./src/app/services/authActivator.services.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/gamePage.component.ts","./src/app/pages/gamePage.component.html","./src/app/pages/loginPage.component.html","./src/app/pages/loginPage.component.ts","./src/app/app.module.ts","./src/app/pages/gameSystem.component.ts","./src/app/pages/gameSystem.component.html","./src/app/router/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<h2>Get Date using Angular and API:</h2>\r\n<div class=\"row\">\r\n\r\n    <table class=\"table table\">\r\n        <thead>\r\n            <tr>\r\n                <th>\r\n                    Name\r\n                </th>\r\n                <th>\r\n                    Rating\r\n                </th>\r\n                <th>\r\n                    Description\r\n                </th>\r\n                <th>\r\n                    GameSystems\r\n                </th>\r\n                <th>\r\n                    DiscType\r\n                </th>\r\n                <th>\r\n                    CreationDate\r\n                </th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tr *ngFor=\"let p of games.games\">\r\n            <td>\r\n                {{p.name}}\r\n            </td>\r\n            <td>\r\n                {{p.rating}}\r\n            </td>\r\n            <td>\r\n                {{p.description}}\r\n            </td>\r\n            <td>\r\n                {{p.gameSystems.systemName}}\r\n            </td>\r\n            <td>\r\n                {{p.discType}}\r\n            </td>\r\n            <td>\r\n                {{p.creationDate}}\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n<h2>Get Date using Database calls:</h2>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Game } from \"../services/store.services\";\r\n\r\n@Component({\r\n    selector:\"game-list\",\r\n    templateUrl: \"gameListView.component.html\",\r\n    styleUrls: [\"gameListView.component.css\"]\r\n})\r\nexport default class GameListView implements OnInit {\r\n    public gamess = [];\r\n    constructor(public games: Game) {\r\n        this.gamess = games.games;\r\n    }\r\n    ngOnInit(): void {\r\n        this.games.loadGames()\r\n            .subscribe(() => {\r\n                });\r\n    }\r\n}","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Gamee } from \"../shared/Game\";\r\nimport { LoginRequest, LoginResults } from \"../shared/LoginResults\";\r\n\r\n@Injectable()\r\nexport class Game {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n    public games: Game[] = [];\r\n    public token = \"\";\r\n    \r\n    public myThing: Gamee = { \r\n        name: \"Unchartered\",\r\n        description: \"a\",\r\n        gameSystemID: 5,  \r\n        rating: 5,\r\n        discType: \"Digital\"\r\n    };\r\n    public expiration = new Date();\r\n    loadGames() : Observable<void> {\r\n        return this.http.get<[]>(\"/api/GameAPI\")\r\n            .pipe(map(data => {\r\n                this.games = data;\r\n                return;\r\n            }));\r\n    }\r\n    get loginRequired(): boolean {\r\n        return this.token.length === 0 || this.expiration < new Date();\r\n    }\r\n\r\n    login(creds: LoginRequest) {\r\n        return this.http.post<LoginResults>(\"/account/createtoken\", creds)\r\n            .pipe(map(data => {\r\n                this.token = data.token;\r\n                this.expiration = data.expiration;\r\n            }));\r\n         \r\n    }\r\n\r\n    addGame() {\r\n        const headers = new HttpHeaders().set(\"Authorization\", `Bearer ${this.token}`)\r\n        return this.http.post(\"/api/GameAPI/\", this.myThing, {\r\n            headers: headers\r\n        })\r\n            .pipe(map(() => {\r\n                this.myThing = this.myThing;\r\n            }));\r\n    }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Game } from \"./store.services\";\r\n\r\n@Injectable()\r\nexport class AuthActivator implements CanActivate {\r\n    constructor(private game: Game, private router: Router) {\r\n\r\n    }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        if (this.game.loginRequired) {\r\n            this.router.navigate([\"login\"]);\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n    \r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'the-games',\r\n    templateUrl:\"app.component.html\" ,\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n  title = 'Games Library';\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <h3>{{title}}</h3>\r\n        <router-outlet></router-outlet>\r\n    </div> \r\n</div>","import { Component } from \"@angular/core\"; \r\nimport { Router } from \"@angular/router\";\r\nimport { Game } from \"../services/store.services\";\r\n\r\n@Component({\r\n    selector: \"game-page\",\r\n    templateUrl: \"gamePage.component.html\"\r\n})\r\nexport class GamePage {\r\n    public errorMessage = \"\"; \r\n    constructor(public game: Game, private router:Router) {\r\n        this.onCreateGame();\r\n    }\r\n    onCreateGame() {\r\n        this.errorMessage = \"\";\r\n        //this.game.addGame()\r\n        //    .subscribe(() => {\r\n        //        this.router.navigate([\"/\"]);\r\n        //    }, err => {\r\n        //            this.errorMessage = \"Failed to add Game\"; \r\n        //    })\r\n    }\r\n}","<div class=\"row\">\r\n    <div class=\"col-9\"> \r\n        <game-list></game-list>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <h3>GamePage from router</h3>\r\n    </div>\r\n\r\n</div>","<div class=\"row\">\n    <div class=\"col-md-4 col-md-offset-4\">\n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n        <form (submit)=\"onLogin()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" class=\"form-control\" name=\"name\" #username=\"ngModel\" [(ngModel)]=\"creds.username\" required />\n                <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\">Required</div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" #password=\"ngModel\" name=\"password\" [(ngModel)]=\"creds.password\" required />\n                <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">Required</div>\n            </div>\n            <div class=\"form-group\">\n                <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"username.invalid || password.invalid\" />\n                <a href=\"#\" class=\"btn btn-default\">Cancel</a>\n            </div>\n        </form>\n        <div>{{ creds | json }}</div>\n    </div>\n</div>\nabcd","import { Component } from \"@angular/core\"; \r\nimport { Router } from \"@angular/router\";\r\nimport { Game } from \"../services/store.services\";\r\nimport { LoginRequest } from \"../shared/LoginResults\";\r\n\r\n@Component({\r\n    selector: \"login-page\",\r\n    templateUrl: \"loginPage.component.html\"\r\n})\r\nexport class LoginPage {\r\n    constructor(public game: Game, private router: Router) {\r\n\r\n    }\r\n    public creds: LoginRequest = {\r\n        username: \"\",\r\n        password: \"\"\r\n    }\r\n    public errorMessage = \"\";\r\n    onLogin() {\r\n        this.game.login(this.creds)\r\n            .subscribe(() => {\r\n                // Successfully logged in\r\n                if (this.game.games.length > 0) {\r\n                    this.router.navigate([\"checkout\"]);\r\n                } else {\r\n                    this.router.navigate([\"\"]);\r\n                }\r\n            }, error => {\r\n                console.log(error);\r\n                this.errorMessage = \"Failed to login\";\r\n            });\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { AppComponent } from './app.component';\r\nimport { Game } from './services/store.services';\r\nimport GameListView from './views/gameListView.component';\r\nimport router from './router';\r\nimport { GamePage } from './pages/gamePage.component';\r\nimport { GameSystem } from './pages/gameSystem.component';\r\nimport { LoginPage } from './pages/loginPage.component';\r\nimport { AuthActivator } from './services/authActivator.services';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n        AppComponent,\r\n        GameListView,\r\n        GamePage,\r\n        GameSystem,\r\n        LoginPage,\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      router,\r\n      FormsModule\r\n  ],\r\n    providers: [\r\n        Game,\r\n        AuthActivator],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from \"@angular/core\"; \r\n\r\n@Component({\r\n    selector: \"gameSystem-page\",\r\n    templateUrl: \"gameSystem.component.html\"\r\n})\r\nexport class GameSystem {\r\n\r\n}","<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <game-list></game-list>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <h3>Games System from router</h3>\r\n    </div>\r\n\r\n</div>","import { RouterModule } from \"@angular/router\";\r\nimport { GamePage } from \"../pages/gamePage.component\";\r\nimport { GameSystem } from \"../pages/gameSystem.component\";\r\nimport { LoginPage } from \"../pages/loginPage.component\";\r\nimport { AuthActivator } from \"../services/authActivator.services\";\r\n\r\nconst routes = [\r\n    { path: \"game\", component: GamePage },\r\n    { path: \"\", component: GamePage },\r\n    { path:\"gameSystem\",component : GameSystem, canActivate:[AuthActivator]},\r\n    { path: \"login\", component: LoginPage },\r\n    { path: \"**\", redirectTo:\"/\" }\r\n];\r\nconst router = RouterModule.forRoot(routes, {\r\n    useHash: true\r\n});\r\nexport default router;","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}